name: nightly tts tests

on:
  schedule:
    - cron: '0 2 * * *'  # Run at 2 AM UTC daily
  workflow_dispatch:  # Allow manual trigger

jobs:
  test-edge-tts:
    runs-on: ubuntu-latest
    name: test edge tts generation
    
    steps:
      - uses: actions/checkout@v4
      
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: install dependencies
        run: |
          pip install -e .
          
      - name: test edge tts audio generation
        run: |
          python -c "
          import asyncio
          from src.voicegenhub import VoiceGenHub
          
          async def test():
              tts = VoiceGenHub()
              await tts.initialize()
              
              response = await tts.generate(
                  text='nightly test of edge tts provider',
                  voice='en-US-AriaNeural'
              )
              
              assert len(response.audio_data) > 0, 'no audio data generated'
              assert response.duration > 0, 'invalid audio duration'
              
              print(f'success: generated {len(response.audio_data)} bytes, {response.duration:.2f}s duration')
          
          asyncio.run(test())
          "
          
      - name: upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: edge-tts-failure-logs
          path: |
            *.log
            /tmp/*.log

  test-google-tts:
    runs-on: ubuntu-latest
    name: test google tts generation
    
    steps:
      - uses: actions/checkout@v4
      
      - name: setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: install dependencies
        run: |
          pip install -e .
          pip install google-cloud-texttospeech
          
      - name: test google tts audio generation
        env:
          GOOGLE_APPLICATION_CREDENTIALS_JSON: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS_JSON }}
        run: |
          if [ -z "$GOOGLE_APPLICATION_CREDENTIALS_JSON" ]; then
            echo "skipping google tts test - no credentials configured"
            exit 0
          fi
          
          echo "$GOOGLE_APPLICATION_CREDENTIALS_JSON" > /tmp/google-credentials.json
          export GOOGLE_APPLICATION_CREDENTIALS="/tmp/google-credentials.json"
          
          python -c "
          import asyncio
          from google.cloud import texttospeech
          
          async def test():
              try:
                  client = texttospeech.TextToSpeechClient()
                  
                  synthesis_input = texttospeech.SynthesisInput(text='nightly test of google tts')
                  voice = texttospeech.VoiceSelectionParams(
                      language_code='en-US',
                      ssml_gender=texttospeech.SsmlVoiceGender.NEUTRAL
                  )
                  audio_config = texttospeech.AudioConfig(
                      audio_encoding=texttospeech.AudioEncoding.MP3
                  )
                  
                  response = client.synthesize_speech(
                      input=synthesis_input,
                      voice=voice,
                      audio_config=audio_config
                  )
                  
                  assert len(response.audio_content) > 0, 'no audio data generated'
                  print(f'success: generated {len(response.audio_content)} bytes')
                  
              except Exception as e:
                  print(f'google tts test failed: {e}')
                  raise
          
          asyncio.run(test())
          "
          
      - name: upload failure logs
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: google-tts-failure-logs
          path: |
            *.log
            /tmp/*.log